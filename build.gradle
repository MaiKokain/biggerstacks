buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'

    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '1.18-2.7.1'
group = 'PORTB'
archivesBaseName = 'biggerstacks'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    mappings channel: 'official', version: '1.18.1'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    runs {
        client {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'biggerstacks'

            mods {
                biggerstacks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('serverrun')
            
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'biggerstacks'

            mods {
                biggerstacks {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('gametestrun')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'biggerstacks'

            mods {
                biggerstacks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('datarun')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'biggerstacks', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                biggerstacks {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "biggerstacks.refmap.json"

    config "biggerstacks.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()

    maven {	// IE & CT Files
        name = "BlameJared"
        url = "https://maven.blamejared.com/"
    }
    maven { // JEI & Tinkers
        name 'DVS1 Maven FS'
        url 'https://dvs1.progwml6.com/files/maven'
    }
    maven { //Refined storage
        url = uri("https://maven.pkg.github.com/refinedmods/refinedstorage")
        credentials {
            username = "githubisstupid"
            password = "\u0067hp_pnP5hVDYXXhhXwe21IEkrUzGjquUJL0xjLzb"
        }
    }
    maven { //Applied energy sticks 2
        url = uri("https://maven.pkg.github.com/AppliedEnergistics/Applied-Energistics-2")
        credentials {
            username = "githubisstupid"
            password = "\u0067hp_pnP5hVDYXXhhXwe21IEkrUzGjquUJL0xjLzb"
        }
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.1-39.1.2'

    var jei = "mezz.jei:jei-1.18.1:9.2.1.69"
    var rs = "com.refinedmods:refinedstorage:1.10.0"
    var ae2 = "appeng:appliedenergistics2:10.0.1"
    var cyclic = "curse.maven:Cyclic-239286:3680474"
    var mcJtyLib = "curse.maven:McJtyLib-233105:3665826"
    var rftoolsBase = "curse.maven:RFToolsBase-326041:3665829"
    var rftoolsStorage = "curse.maven:RFToolsBase-350006:3665835"
    var rftoolsUtility = "curse.maven:RFToolsUtility-342466:3665830"
    var xnet = "curse.maven:XNet-260912:3642808"
    var dimStorage = "curse.maven:DimStorage-353882:3569750"
    var prettyPipes = "curse.maven:PrettyPipes-376737:3672088"
    var colossalChests = "curse.maven:ColossalChests-237875:3614897" //deobf version
    var cyclopsCore = "curse.maven:CyclopsCore-232758:3683832" //deobf version
    var modularRouters = "curse.maven:ModularRouters-250294:3621743"
    var ie = "blusunrize.immersiveengineering:ImmersiveEngineering:1.18.1-7.1.1-pre.9"
    //var bonsaiTrees = "curse.maven:BonsaiTrees-278993:3677571"
    //var libnonymous = "curse.maven:Libnonymous-357557:3677573"

    implementation fg.deobf(jei)
    implementation fg.deobf(rs) { transitive false }
    implementation fg.deobf(ae2)
    implementation fg.deobf(modularRouters)
    implementation fg.deobf(cyclic)
    implementation fg.deobf(mcJtyLib)
    implementation fg.deobf(rftoolsUtility)
    implementation fg.deobf(rftoolsBase)
    implementation fg.deobf(rftoolsStorage)
    implementation fg.deobf(xnet)
    implementation fg.deobf(dimStorage)
    implementation fg.deobf(prettyPipes)
    implementation fg.deobf(ie)
    implementation colossalChests
    implementation cyclopsCore
    //implementation fg.deobf(bonsaiTrees)
    //implementation fg.deobf(libnonymous)

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "biggerstacks",
                //"Specification-Vendor"    : "biggerstackssareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion.get(),
                //"Implementation-Vendor"   : "biggerstackssareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
