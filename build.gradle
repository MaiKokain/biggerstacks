buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'portb.gradle.MinecraftSubmoduleDependencyPlugin' version "1.2"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

version = "$minecraftVersion-$modVersion"
group = 'portb'
archivesBaseName = 'biggerstacks'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    mappings channel: 'parchment', version: "$parchmentVersion-$minecraftVersion"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // Currently, this location cannot be changed from the default.

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'biggerstacks'

            args(["--username", "Dev###"])

            mods {
                biggerstacks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('serverrun')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'biggerstacks'

            mods {
                biggerstacks {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('gametestrun')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'biggerstacks'

            mods {
                biggerstacks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('datarun')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'biggerstacks', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                biggerstacks {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "biggerstacks.refmap.json"

    config "biggerstacks.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    mavenLocal()

    maven { // JEI
        name 'DVS1 Maven FS'
        url 'https://dvs1.progwml6.com/files/maven'
    }

    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

submodules {
    submodulesDirectory = file("submodules")
    gradleJava = "C:\\PROGRA~1\\ECLIPS~1\\jdk-17.0.5.8-hotspot"

    repos {
        "Applied-Energistics-2" {
            //disable spotless (it causes build errors because npm isn't installed)
            customGradleCode = """
                afterEvaluate {
                    tasks.spotlessJava.enabled = false
                    tasks.spotlessJavaCheck.enabled = false
                    tasks.spotlessJson.enabled = false
                }
            """.stripIndent()

            tasks = ["runData", "build"]
            ignoreErrors = true
        }

        PrettyPipes {
            forceForgeGradleVersion="5.1.69"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:$minecraftVersion-$forgeVersion"

    //
    // Embedded libraries
    //
    jarJar.enable()
    project.configurations.minecraftLibrary.extendsFrom(project.configurations.jarJar)

    jarJar "portb:BiggerStacksConfigLib:$configLibVersion", "portb:BiggerStacksTransformerLib:$transformerLibVersion", "portb:SimpleLoggerWrapper:$simpleLoggerWrapperVersion"

    //
    // Mixin
    //
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.1.255")
}

jar {
    manifest {
        attributes([
                "Specification-Title"        : "biggerstacks",
                "Implementation-Title"       : project.name,
                "Implementation-Version"     : project.jar.archiveVersion.get(),
                "Implementation-Timestamp"   : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TransformerLib-Version"     : transformerLibVersion,
                "ConfigLib-Version"          : configLibVersion,
                "SimpleLoggerWrapper-Version": simpleLoggerWrapperVersion
        ])
    }
}

reobf {
    jarJar {}
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}